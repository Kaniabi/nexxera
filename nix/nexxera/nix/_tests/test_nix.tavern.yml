---
marks:
  - usefixtures:
    - flask_live_url

test_name: Testing nix API

stages:
#  - name: Smoke test for ping
#    request:
#      url: '{flask_live_url}/ping'
#      method: GET
#    response:
#      status_code: 200

  # Testing users

  - name: List all users (empty).
    request:
      url: '{flask_live_url}/api/users'
      method: GET
    response:
      status_code: 200
      body:
        num_results: 0
        objects: []
        page: 1
        total_pages: 0

  - name: Create an user.
    request:
      url: '{flask_live_url}/api/users'
      method: POST
      headers:
          content-type: application/json
      json:
        name: "Alpha"
        cnpj: "11111111111111"
    response:
      status_code: 201
      body:
        id: 1
        name: "Alpha"
        cnpj: "11111111111111"

  - name: List all users (one).
    request:
      url: '{flask_live_url}/api/users'
      method: GET
    response:
      status_code: 200
      body:
        num_results: 1
        objects:
          - id: 1
            name: "Alpha"
            cnpj: "11111111111111"
        page: 1
        total_pages: 1

  - name: Get one specific user.
    request:
      url: '{flask_live_url}/api/users/1'
    response:
      status_code: 200
      body:
          id: 1
          name: "Alpha"
          cnpj: "11111111111111"

  # Testing transactions

  - name: List all transactions (zero).
    request:
      url: '{flask_live_url}/api/transactions'
      method: GET
    response:
      status_code: 200
      body:
        num_results: 0
        objects: []
        page: 1
        total_pages: 0

  - name: Create the first transaction.
    request:
      url: '{flask_live_url}/api/transactions'
      method: POST
      headers:
          content-type: application/json
      json:
          user_id: 1
          amount: 100.00
          type: 'CC'
    response:
      status_code: 201
      body:
          id: 1
          user_id: 1
          amount: 100.00
          type: 'CC'

  - name: Create the second transaction.
    request:
      url: '{flask_live_url}/api/transactions'
      method: POST
      headers:
          content-type: application/json
      json:
          user_id: 1
          amount: 10.00
          type: 'CC'
    response:
      status_code: 201
      body:
          id: 2
          user_id: 1
          amount: 10.00
          type: 'CC'

  - name: Get one specific transaction.
    request:
      url: '{flask_live_url}/api/transactions/2'
    response:
      status_code: 200
      body:
          id: 2
          user_id: 1
          amount: 10.00
          type: 'CC'

  - name: Lists the transactions (two).
    request:
      url: '{flask_live_url}/api/transactions'
    response:
      status_code: 200
      body:
        num_results: 2
        objects:
          - id: 1
            user_id: 1
            amount: 100.00
          - id: 2
            user_id: 1
            amount: 10.00
        page: 1
        total_pages: 1

  - name: Delete the second transaction.
    request:
        url: '{flask_live_url}/api/transactions/2'
        method: DELETE
    response:
        status_code: 204
        body: {}

  - name: Lists the transactions (one).
    request:
      url: '{flask_live_url}/api/transactions'
    response:
      status_code: 200
      body:
        num_results: 1
        objects:
          - id: 1
            user_id: 1
            amount: 100.00
        page: 1
        total_pages: 1
